# Note: I know it's advised against for workflows to do multiple things.
# I don't care.

name: "Release and Deploy"

on:
  push:
    tags:
      - 'v*' # When version tags are pushed

permissions:
  contents: write

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: FusionForge
  PROJECT_PATH: project

jobs:
  export:
    name: Export for All Platforms
    runs-on: ubuntu-latest
    
    container:
      # This image makes exporting the project easy ðŸ˜€
      image: barichello/godot-ci:4.3
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # Manually changes game version to tag name
      # Note: If "config/version/*" is not found in project.godot, this doesn't work!
      - name: Update Project Version
        run: |
          sed -i 's/^config\/version=.*/config\/version="${{ env.TAG_NAME }}"/' $PROJECT_PATH/project.godot
          cat $PROJECT_PATH/project.godot # Optional: View the modified file to verify the change

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" ../build/windows/${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}.exe

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux/X11" ../build/linux/${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}.x86_64

      - name: macOS Build
        run: |
          mkdir -v -p build/macos
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Mac OSX" ../build/macos/${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}.app

      - name: Web Build
        run: |
          mkdir -v -p build/web
          mv web/index.html build/web/
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "HTML5" ../build/web/game.html
      
      # For Windows, Linux, macOS, and Web, change to the respective directories and zip only the contents
      - name: Zip All Builds
        run: |
          cd build
          cd windows && zip -r ../${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}-windows.zip * && cd ..
          cd linux && zip -r ../${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}-linux.zip * && cd ..
          cd macos && zip -r ../${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}-macos.zip * && cd ..
          cd web && zip -r ../${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}-web.zip * && cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch that should be hosted
          folder: build/web # We use the results of the web build as the base path
