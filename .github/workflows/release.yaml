name: "godot-ci export"
on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

permissions:
  actions: write
  contents: write

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: FusionForge
  PROJECT_PATH: project

jobs:
  export:
    name: Export for All Platforms
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" ../build/windows/${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}.exe

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux/X11" ../build/linux/${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}.x86_64

      - name: macOS Build
        run: |
          mkdir -v -p build/macos
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Mac OSX" ../build/macos/${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}.app

      - name: Zip All Builds
        run: |
          cd build
          zip -r ${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}-windows.zip windows/*
          zip -r ${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}-linux.zip linux/*
          zip -r ${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}-macos.zip macos/*

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: all-platforms
          path: build/*.zip

      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/${{ env.EXPORT_NAME }}-${{ env.TAG_NAME }}-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
